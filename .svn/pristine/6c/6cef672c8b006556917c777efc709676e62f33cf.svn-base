<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xykj.crowdfunding.reverse.dao.SysMenuMapper" >
  <resultMap id="BaseResultMap" type="com.xykj.crowdfunding.reverse.pojo.SysMenu" >
    <id column="menu_id" property="menuId" jdbcType="INTEGER" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
    <result column="menu_icon" property="menuIcon" jdbcType="VARCHAR" />
    <result column="menu_info" property="menuInfo" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="BIT" />
    <result column="power_id" property="powerId" jdbcType="INTEGER" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    menu_id, parentid, menu_name, menu_url, menu_icon, menu_info, sort, is_show, power_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_menu
    where menu_id = #{menuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_menu
    where menu_id = #{menuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenuExample" >
    delete from sys_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenu" >
    insert into sys_menu (menu_id, parentid, menu_name, 
      menu_url, menu_icon, menu_info, 
      sort, is_show, power_id)
    values (#{menuId,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{menuName,jdbcType=VARCHAR}, 
      #{menuUrl,jdbcType=VARCHAR}, #{menuIcon,jdbcType=VARCHAR}, #{menuInfo,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{isShow,jdbcType=BIT}, #{powerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenu" >
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="menuUrl != null" >
        menu_url,
      </if>
      <if test="menuIcon != null" >
        menu_icon,
      </if>
      <if test="menuInfo != null" >
        menu_info,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
      <if test="powerId != null" >
        power_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuIcon != null" >
        #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuInfo != null" >
        #{menuInfo,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=BIT},
      </if>
      <if test="powerId != null" >
        #{powerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenuExample" resultType="java.lang.Integer" >
    select count(*) from sys_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_menu
    <set >
      <if test="record.menuId != null" >
        menu_id = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.menuName != null" >
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null" >
        menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.menuIcon != null" >
        menu_icon = #{record.menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.menuInfo != null" >
        menu_info = #{record.menuInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isShow != null" >
        is_show = #{record.isShow,jdbcType=BIT},
      </if>
      <if test="record.powerId != null" >
        power_id = #{record.powerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_menu
    set menu_id = #{record.menuId,jdbcType=INTEGER},
      parentid = #{record.parentid,jdbcType=INTEGER},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      menu_icon = #{record.menuIcon,jdbcType=VARCHAR},
      menu_info = #{record.menuInfo,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      is_show = #{record.isShow,jdbcType=BIT},
      power_id = #{record.powerId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenu" >
    update sys_menu
    <set >
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuIcon != null" >
        menu_icon = #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuInfo != null" >
        menu_info = #{menuInfo,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=BIT},
      </if>
      <if test="powerId != null" >
        power_id = #{powerId,jdbcType=INTEGER},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xykj.crowdfunding.reverse.pojo.SysMenu" >
    update sys_menu
    set parentid = #{parentid,jdbcType=INTEGER},
      menu_name = #{menuName,jdbcType=VARCHAR},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      menu_icon = #{menuIcon,jdbcType=VARCHAR},
      menu_info = #{menuInfo,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=BIT},
      power_id = #{powerId,jdbcType=INTEGER}
    where menu_id = #{menuId,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
      select 
    <include refid="Base_Column_List" />
    from sys_menu
  </select>
  
  <select id="queryUseMenu" resultMap="BaseResultMap">
  
  	<!-- select DISTINCT
		sm.menu_id,
		sm.menu_name,
		sm.menu_url
	from 
		sys_menu sm,
	 	permissions pm,
		role_power rp,
		role r,
		user_role ur,
	 	user us
	where 
	 	us.user_id = #{userId}
	 	and us.user_id = ur.user_id
  		and ur.role_id = r.role_id
		and r.role_id = rp.role_id
    	and rp.power_id = sm.power_id -->
SELECT DISTINCT
	sm.menu_id,
	sm.menu_name,
	sm.menu_url,
	sm.parentid
from 
	 sys_menu sm,
	 permissions pm,
	 role_power rp,
		role r,
		user_role ur,
	 user us
where 
	 us.user_id = #{userId}
	 and us.user_id = ur.user_id
   and ur.role_id = r.role_id
		and r.role_id = rp.role_id
    and rp.power_id = sm.power_id
		and sm.parentid is not null
  </select>
  
   <select id="getFirstClassMenuByUserId" resultMap="BaseResultMap">
  	SELECT DISTINCT
	parentMenu.menu_id,
	parentMenu.menu_name
from 
	 sys_menu sm,
	 permissions pm,
	 role_power rp,
		role r,
		user_role ur,
	 user us,
	(SELECT menu_id,menu_name,parentid from sys_menu) parentMenu
where 
	 us.user_id = #{userId}
	 and us.user_id = ur.user_id
   and ur.role_id = r.role_id
		and r.role_id = rp.role_id
    and rp.power_id = sm.power_id
		and sm.parentid is not null
		and sm.parentid = parentMenu.menu_id
  
  </select>
  
  <select id="getSubMenusByParentIdAndUserId" resultMap="BaseResultMap">
  	SELECT DISTINCT
	
	sm.menu_name,
	sm.menu_url
<!-- 	
sm.menu_id,
sm.parentid,
	sm.power_id -->
from 
	 sys_menu sm,
	 permissions pm,
	 role_power rp,
		role r,
		user_role ur,
	 user us,
	(SELECT menu_id,menu_name,parentid from sys_menu) parentMenu
where 
	 us.user_id = #{userId}
	 and us.user_id = ur.user_id
   and ur.role_id = r.role_id
		and r.role_id = rp.role_id
    and rp.power_id = sm.power_id
		and sm.parentid is not null
		and sm.parentid = parentMenu.menu_id
		and parentMenu.menu_id = #{menuId}
  </select>
  
</mapper>